Emote search/picker:
  - Make search an "and" for each space-separated keyword.

  - sr:mylittlewtf subreddit syntax. Multiple subreddits would be an OR.

Emote search:
  - A full-fledged builtin emote listing/browsing tool, implemented as something
    like a tab on the options page. Firefox lets us have multiple buttons, but
    on Chrome and Opera all we have is the "Options"/"Preferences" links. Would
    be nice if we could make them actually separate pages, but that may not be
    possible.

    On the left would be column with each subreddit listed, perhaps with the
    number of emotes it has in parens. The rest of the page would be dedicated
    to listing, searching, and browsing emotes.

    Categorizing emotes is a difficult idea. We could go by spritesheet (assign
    unique ID's), but that's not always reliable. Tagging would be better (if
    that goes anywhere), but a lot of work.

General TODO:
  - Find a better way to handle data files (including emote-map.js) in Opera.
    "make" and file.read() is awful.

    This will probably come down to external hosting. There will most likely
    be *no* other solution when we get to a userscript variant, anyway.

  - Move the www files to /bpm/ or something. Rename betterponymotes.update.rdf
    to firefox-updates.rdf for consistency. Basically just move everything a
    level deeper over the course of an update.

  - Rework tooling a bit, mainly update.py and updatehelper.py. Keep a YAML
    file containing a list of subreddits and such, along with any special
    instructions, e.g. "-e".
    - Expand bpextract.py to include more extraction options. Add an ExtractionContext
      (or similar) object to manage global options and things. At a minimum
      I'd like --no-ignore (to search through PONYSCRIPT-IGNORE blocks) and -e
      to extract specific emotes from r/mlplounge.

      Maybe just -e? --no-ignore doesn't do anything useful on its own except
      generate too much noise.
    - Add options to control logging, and omit/include specific warnings. Most
      of them would generally be enabled by default, but we might want to ignore
      certain properties for certain subreddits (we don't need to use them
      globally, then). E.g. require "display: none" by default, but add a option
      like --ignore-prop=display.

  - See if there's any way to listen for localStorage writes on Chrome and Opera.
    Essentially this boils down to finding a way to signal from options.html
    to index.html/background.js, which in theory should be possible.

    After that we can consider sending updated prefs to the content scripts (we
    already can from Fx), and think about implementing hot-reloading again.

Misc:
  - Make bpextract/bpgen share as much code as possible. Make formal objects for
    EVERYTHING, with strictly-validating create/save/load methods.

  - Merge /rsbf into mlas1 or something.

  - Replace all setAttribute() calls with actual attributes...

Update process:
  - $ bin/version.py set -v [...]
  - $ rm build/*.{xpi,crx,oex} # Delete old versions
  - $ make
